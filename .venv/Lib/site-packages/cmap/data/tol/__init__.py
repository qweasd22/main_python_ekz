"""These palettes are from Paul Tol's Notes on Colour schemes and templates.

Paul Tol is a Dutch instrument scientist with a PhD in atomic physics,
working on the TROPOMI, SPEXone and TANGO projects in the Earth programme of SRON.

https://personal.sron.nl/~pault/
https://personal.sron.nl/~pault/data/tol_colors.py
https://personal.sron.nl/~pault/data/colourschemes.pdf

Copyright:

Copyright (c) 2022, Paul Tol
All rights reserved.

License:  Standard 3-clause BSD
"""

sunset_discrete = [
    (54, 75, 154),  # "#364B9A"
    (74, 123, 183),  # "#4A7BB7"
    (110, 166, 205),  # "#6EA6CD"
    (152, 202, 225),  # "#98CAE1"
    (194, 228, 239),  # "#C2E4EF"
    (234, 236, 204),  # "#EAECCC"
    (254, 218, 139),  # "#FEDA8B"
    (253, 179, 102),  # "#FDB366"
    (246, 126, 75),  # "#F67E4B"
    (221, 61, 45),  # "#DD3D2D"
    (165, 0, 38),  # "#A50026"
]

sunset = sunset_discrete

nightfall_discrete = [
    (18, 90, 86),  # "#125A56"
    (35, 143, 157),  # "#238F9D"
    (96, 188, 233),  # "#60BCE9"
    (198, 219, 237),  # "#C6DBED"
    (236, 234, 218),  # "#ECEADA"
    (249, 213, 118),  # "#F9D576"
    (253, 154, 68),  # "#FD9A44"
    (233, 76, 31),  # "#E94C1F"
    (160, 24, 19),  # "#A01813"
]

nightfall = [
    (18, 90, 86),  # "#125A56"
    (0, 118, 123),  # "#00767B"
    (35, 143, 157),  # "#238F9D"
    (66, 167, 198),  # "#42A7C6"
    (96, 188, 233),  # "#60BCE9"
    (157, 204, 239),  # "#9DCCEF"
    (198, 219, 237),  # "#C6DBED"
    (222, 230, 231),  # "#DEE6E7"
    (236, 234, 218),  # "#ECEADA"
    (240, 230, 178),  # "#F0E6B2"
    (249, 213, 118),  # "#F9D576"
    (255, 185, 84),  # "#FFB954"
    (253, 154, 68),  # "#FD9A44"
    (245, 118, 52),  # "#F57634"
    (233, 76, 31),  # "#E94C1F"
    (209, 24, 7),  # "#D11807"
    (160, 24, 19),  # "#A01813"
]

BuRd_discrete = [
    (33, 102, 172),  # "#2166AC"
    (67, 147, 195),  # "#4393C3"
    (146, 197, 222),  # "#92C5DE"
    (209, 229, 240),  # "#D1E5F0"
    (247, 247, 247),  # "#F7F7F7"
    (253, 219, 199),  # "#FDDBC7"
    (244, 165, 130),  # "#F4A582"
    (214, 96, 77),  # "#D6604D"
    (178, 24, 43),  # "#B2182B"
]

BuRd = BuRd_discrete

PRGn_discrete = [
    (118, 42, 131),  # "#762A83"
    (153, 112, 171),  # "#9970AB"
    (194, 165, 207),  # "#C2A5CF"
    (231, 212, 232),  # "#E7D4E8"
    (247, 247, 247),  # "#F7F7F7"
    (217, 240, 211),  # "#D9F0D3"
    (172, 211, 158),  # "#ACD39E"
    (90, 174, 97),  # "#5AAE61"
    (27, 120, 55),  # "#1B7837"
]

PRGn = PRGn_discrete

YlOrBr_discrete = [
    (255, 255, 229),  # "#FFFFE5"
    (255, 247, 188),  # "#FFF7BC"
    (254, 227, 145),  # "#FEE391"
    (254, 196, 79),  # "#FEC44F"
    (251, 154, 41),  # "#FB9A29"
    (236, 112, 20),  # "#EC7014"
    (204, 76, 2),  # "#CC4C02"
    (153, 52, 4),  # "#993404"
    (102, 37, 6),  # "#662506"
]

YlOrBr = YlOrBr_discrete

WhOrBr = [
    (255, 255, 255),  # "#FFFFFF"
    (255, 247, 188),  # "#FFF7BC"
    (254, 227, 145),  # "#FEE391"
    (254, 196, 79),  # "#FEC44F"
    (251, 154, 41),  # "#FB9A29"
    (236, 112, 20),  # "#EC7014"
    (204, 76, 2),  # "#CC4C02"
    (153, 52, 4),  # "#993404"
    (102, 37, 6),  # "#662506"
]

iridescent = [
    (254, 251, 233),  # "#FEFBE9"
    (252, 247, 213),  # "#FCF7D5"
    (245, 243, 193),  # "#F5F3C1"
    (234, 240, 181),  # "#EAF0B5"
    (221, 236, 191),  # "#DDECBF"
    (208, 231, 202),  # "#D0E7CA"
    (194, 227, 210),  # "#C2E3D2"
    (181, 221, 216),  # "#B5DDD8"
    (168, 216, 220),  # "#A8D8DC"
    (155, 210, 225),  # "#9BD2E1"
    (141, 203, 228),  # "#8DCBE4"
    (129, 196, 231),  # "#81C4E7"
    (123, 188, 231),  # "#7BBCE7"
    (126, 178, 228),  # "#7EB2E4"
    (136, 165, 221),  # "#88A5DD"
    (147, 152, 210),  # "#9398D2"
    (155, 138, 196),  # "#9B8AC4"
    (157, 125, 178),  # "#9D7DB2"
    (154, 112, 158),  # "#9A709E"
    (144, 99, 136),  # "#906388"
    (128, 87, 112),  # "#805770"
    (104, 73, 87),  # "#684957"
    (70, 53, 58),  # "#46353A"
]

incandescent = [
    (206, 255, 255),  # "#CEFFFF"
    (198, 247, 214),  # "#C6F7D6"
    (162, 244, 155),  # "#A2F49B"
    (187, 228, 83),  # "#BBE453"
    (213, 206, 4),  # "#D5CE04"
    (231, 181, 3),  # "#E7B503"
    (241, 153, 3),  # "#F19903"
    (246, 121, 11),  # "#F6790B"
    (249, 73, 2),  # "#F94902"
    (228, 5, 21),  # "#E40515"
    (168, 0, 3),  # "#A80003"
]

rainbow_PuRd = [
    (111, 76, 155),  # "#6F4C9B"
    (96, 89, 169),  # "#6059A9"
    (85, 104, 184),  # "#5568B8"
    (78, 121, 197),  # "#4E79C5"
    (77, 138, 198),  # "#4D8AC6"
    (78, 150, 188),  # "#4E96BC"
    (84, 158, 179),  # "#549EB3"
    (89, 165, 169),  # "#59A5A9"
    (96, 171, 158),  # "#60AB9E"
    (105, 177, 144),  # "#69B190"
    (119, 183, 125),  # "#77B77D"
    (140, 188, 104),  # "#8CBC68"
    (166, 190, 84),  # "#A6BE54"
    (190, 188, 72),  # "#BEBC48"
    (209, 181, 65),  # "#D1B541"
    (221, 170, 60),  # "#DDAA3C"
    (228, 156, 57),  # "#E49C39"
    (231, 140, 53),  # "#E78C35"
    (230, 121, 50),  # "#E67932"
    (228, 99, 45),  # "#E4632D"
    (223, 72, 40),  # "#DF4828"
    (218, 34, 34),  # "#DA2222"
]

rainbow_PuBr = [
    (111, 76, 155),  # "#6F4C9B"
    (96, 89, 169),  # "#6059A9"
    (85, 104, 184),  # "#5568B8"
    (78, 121, 197),  # "#4E79C5"
    (77, 138, 198),  # "#4D8AC6"
    (78, 150, 188),  # "#4E96BC"
    (84, 158, 179),  # "#549EB3"
    (89, 165, 169),  # "#59A5A9"
    (96, 171, 158),  # "#60AB9E"
    (105, 177, 144),  # "#69B190"
    (119, 183, 125),  # "#77B77D"
    (140, 188, 104),  # "#8CBC68"
    (166, 190, 84),  # "#A6BE54"
    (190, 188, 72),  # "#BEBC48"
    (209, 181, 65),  # "#D1B541"
    (221, 170, 60),  # "#DDAA3C"
    (228, 156, 57),  # "#E49C39"
    (231, 140, 53),  # "#E78C35"
    (230, 121, 50),  # "#E67932"
    (228, 99, 45),  # "#E4632D"
    (223, 72, 40),  # "#DF4828"
    (218, 34, 34),  # "#DA2222"
    (184, 34, 30),  # "#B8221E"
    (149, 33, 27),  # "#95211B"
    (114, 30, 23),  # "#721E17"
    (82, 26, 19),  # "#521A13"
]

rainbow_WhRd = [
    (232, 236, 251),  # "#E8ECFB"
    (221, 216, 239),  # "#DDD8EF"
    (209, 193, 225),  # "#D1C1E1"
    (195, 168, 209),  # "#C3A8D1"
    (181, 143, 194),  # "#B58FC2"
    (167, 120, 180),  # "#A778B4"
    (155, 98, 167),  # "#9B62A7"
    (140, 78, 153),  # "#8C4E99"
    (111, 76, 155),  # "#6F4C9B"
    (96, 89, 169),  # "#6059A9"
    (85, 104, 184),  # "#5568B8"
    (78, 121, 197),  # "#4E79C5"
    (77, 138, 198),  # "#4D8AC6"
    (78, 150, 188),  # "#4E96BC"
    (84, 158, 179),  # "#549EB3"
    (89, 165, 169),  # "#59A5A9"
    (96, 171, 158),  # "#60AB9E"
    (105, 177, 144),  # "#69B190"
    (119, 183, 125),  # "#77B77D"
    (140, 188, 104),  # "#8CBC68"
    (166, 190, 84),  # "#A6BE54"
    (190, 188, 72),  # "#BEBC48"
    (209, 181, 65),  # "#D1B541"
    (221, 170, 60),  # "#DDAA3C"
    (228, 156, 57),  # "#E49C39"
    (231, 140, 53),  # "#E78C35"
    (230, 121, 50),  # "#E67932"
    (228, 99, 45),  # "#E4632D"
    (223, 72, 40),  # "#DF4828"
    (218, 34, 34),  # "#DA2222"
]

rainbow_WhBr = [
    (232, 236, 251),  # "#E8ECFB"
    (221, 216, 239),  # "#DDD8EF"
    (209, 193, 225),  # "#D1C1E1"
    (195, 168, 209),  # "#C3A8D1"
    (181, 143, 194),  # "#B58FC2"
    (167, 120, 180),  # "#A778B4"
    (155, 98, 167),  # "#9B62A7"
    (140, 78, 153),  # "#8C4E99"
    (111, 76, 155),  # "#6F4C9B"
    (96, 89, 169),  # "#6059A9"
    (85, 104, 184),  # "#5568B8"
    (78, 121, 197),  # "#4E79C5"
    (77, 138, 198),  # "#4D8AC6"
    (78, 150, 188),  # "#4E96BC"
    (84, 158, 179),  # "#549EB3"
    (89, 165, 169),  # "#59A5A9"
    (96, 171, 158),  # "#60AB9E"
    (105, 177, 144),  # "#69B190"
    (119, 183, 125),  # "#77B77D"
    (140, 188, 104),  # "#8CBC68"
    (166, 190, 84),  # "#A6BE54"
    (190, 188, 72),  # "#BEBC48"
    (209, 181, 65),  # "#D1B541"
    (221, 170, 60),  # "#DDAA3C"
    (228, 156, 57),  # "#E49C39"
    (231, 140, 53),  # "#E78C35"
    (230, 121, 50),  # "#E67932"
    (228, 99, 45),  # "#E4632D"
    (223, 72, 40),  # "#DF4828"
    (218, 34, 34),  # "#DA2222"
    (184, 34, 30),  # "#B8221E"
    (149, 33, 27),  # "#95211B"
    (114, 30, 23),  # "#721E17"
    (82, 26, 19),  # "#521A13"
]


rainbow_discrete = [
    (232, 236, 251),  # "#E8ECFB"
    (217, 204, 227),  # "#D9CCE3"
    (209, 187, 215),  # "#D1BBD7"
    (202, 172, 203),  # "#CAACCB"
    (186, 141, 180),  # "#BA8DB4"
    (174, 118, 163),  # "#AE76A3"
    (170, 111, 158),  # "#AA6F9E"
    (153, 79, 136),  # "#994F88"
    (136, 46, 114),  # "#882E72"
    (25, 101, 176),  # "#1965B0"
    (67, 125, 191),  # "#437DBF"
    (82, 137, 199),  # "#5289C7"
    (97, 149, 207),  # "#6195CF"
    (123, 175, 222),  # "#7BAFDE"
    (78, 178, 101),  # "#4EB265"
    (144, 201, 135),  # "#90C987"
    (202, 224, 171),  # "#CAE0AB"
    (247, 240, 86),  # "#F7F056"
    (247, 203, 69),  # "#F7CB45"
    (246, 193, 65),  # "#F6C141"
    (244, 167, 54),  # "#F4A736"
    (241, 147, 45),  # "#F1932D"
    (238, 128, 38),  # "#EE8026"
    (232, 96, 28),  # "#E8601C"
    (230, 85, 24),  # "#E65518"
    (220, 5, 12),  # "#DC050C"
    (165, 23, 14),  # "#A5170E"
    (114, 25, 14),  # "#72190E"
    (66, 21, 10),  # "#42150A"
]


def _inject_rainbow_discrete() -> None:
    # fmt: off
    indexes = [
        [9],
        [9, 25],
        [9, 17, 25],
        [9, 14, 17, 25],
        [9, 13, 14, 17, 25],
        [9, 13, 14, 16, 17, 25],
        [8, 9, 13, 14, 16, 17, 25],
        [8, 9, 13, 14, 16, 17, 22, 25],
        [8, 9, 13, 14, 16, 17, 22, 25, 27],
        [8, 9, 13, 14, 16, 17, 20, 23, 25, 27],
        [8, 9, 11, 13, 14, 16, 17, 20, 23, 25, 27],
        [2, 5, 8, 9, 11, 13, 14, 16, 17, 20, 23, 25],
        [2, 5, 8, 9, 11, 13, 14, 15, 16, 17, 20, 23, 25],
        [2, 5, 8, 9, 11, 13, 14, 15, 16, 17, 19, 21, 23, 25],
        [2, 5, 8, 9, 11, 13, 14, 15, 16, 17, 19, 21, 23, 25, 27],
        [2, 4, 6, 8, 9, 11, 13, 14, 15, 16, 17, 19, 21, 23, 25, 27],
        [2, 4, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 19, 21, 23, 25, 27],
        [2, 4, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 19, 21, 23, 25, 26, 27],
        [1, 3, 4, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 19, 21, 23, 25, 26, 27],
        [1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 19, 21, 23, 25, 26, 27],
        [1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 26, 27],
        [1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 26, 27, 28],
        [0, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 26, 27, 28],
    ]
    # fmt: on

    palettes = {
        f"rainbow_discrete_{i + 1}": [rainbow_discrete[_idx] for _idx in idx]
        for i, idx in enumerate(indexes)
    }

    globals().update(palettes)


_inject_rainbow_discrete()

bright = [
    (68, 119, 170),  # "#4477AA"
    (102, 204, 238),  # "#66CCEE"
    (34, 136, 51),  # "#228833"
    (204, 187, 68),  # "#CCBB44"
    (238, 102, 119),  # "#EE6677"
    (170, 51, 119),  # "#AA3377"
    (187, 187, 187),  # "#BBBBBB"
]


high_contrast = [
    (221, 170, 51),  # "#DDAA33",
    (187, 85, 102),  # "#BB5566",
    (0, 68, 136),  # "#004488",
]

vibrant = [
    (0, 119, 187),  # "#0077BB"
    (51, 187, 238),  # "#33BBEE"
    (0, 153, 136),  # "#009988"
    (238, 119, 51),  # "#EE7733"
    (204, 51, 17),  # "#CC3311"
    (238, 51, 119),  # "#EE3377"
    (187, 187, 187),  # "#BBBBBB"
]

muted = [
    (51, 34, 136),  # "#332288"
    (136, 204, 238),  # "#88CCEE"
    (68, 170, 153),  # "#44AA99"
    (17, 119, 51),  # "#117733"
    (153, 153, 51),  # "#999933"
    (221, 204, 119),  # "#DDCC77"
    (204, 102, 119),  # "#CC6677"
    (136, 34, 85),  # "#882255"
    (170, 68, 153),  # "#AA4499"
]

medium_contrast = [
    (238, 204, 102),  # "#EECC66"
    (238, 153, 170),  # "#EE99AA"
    (102, 153, 204),  # "#6699CC"
    (153, 119, 0),  # "#997700"
    (153, 68, 85),  # "#994455"
    (0, 68, 136),  # "#004488"
]

pale = [
    (187, 204, 238),  # "#BBCCEE"
    (204, 238, 255),  # "#CCEEFF"
    (204, 221, 170),  # "#CCDDAA"
    (238, 238, 187),  # "#EEEEBB"
    (255, 204, 204),  # "#FFCCCC"
    (221, 221, 221),  # "#DDDDDD"
]

dark = [
    (34, 34, 85),  # "#222255"
    (34, 85, 85),  # "#225555"
    (34, 85, 34),  # "#225522"
    (102, 102, 51),  # "#666633"
    (102, 51, 51),  # "#663333"
    (85, 85, 85),  # "#555555"
]

light = [
    (119, 153, 221),  # "#7799DD"
    (153, 221, 255),  # "#99DDFF"
    (68, 187, 153),  # "#44BB99"
    (187, 204, 51),  # "#BBCC33"
    (170, 170, 0),  # "#AAAA00"
    (238, 221, 136),  # "#EEDD88"
    (238, 136, 102),  # "#EE8866"
    (255, 170, 187),  # "#FFAABB"
    (221, 221, 221),  # "#DDDDDD"
]
